{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/ParticleSystem.ts"],"names":["root","factory","exports","module","define","amd","a","i","this","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","randRange","range","Math","abs","random","twoDecimal","number","Number","toFixed","ParticleSystem","texture","textureInfo","config","ctx","canvasInfo","particleList","pool","frameTime","$stopping","$stopped","bodyList","canvasWidth","width","canvasHeight","height","changeTexture","changeConfig","createParticlePool","gravityX","gravity","x","gravityY","y","emitterX","emitterXVariance","emitterYVariance","emitterY","lifespan","maxParticles","speed","angle","angleVariance","endRotation","endRotationVariance","startSize","startSizeVariance","emissionRate","push","Particle","addOneParticle","particle","length","pop","setTextureInfo","textureWidth","textureHeight","initParticle","removeOneParticle","index","indexOf","splice","currentTime","velocityX","cos","velocityY","sin","scale","updateParticle","dt","_this","forEach","body","_a","getAcceleration","forceX","forceY","stop","update","slice","onstopped","render","clear","draw","canvas","clearRect","alpha","rotation","halfWidth","halfHeight","save","translate","rotate","globalAlpha","drawImage","restore","circleDraw","requestAnimationFrame","now","Date","lastTime","setTimeout","circleData","onupdate","data","map","start","startOnlyData","addBody","widened","attract","Body","removeBody","Error","findIndex","item","_startSize","size","_width","_height","ratio","progress","setbody","innerWidened","distanceX","isNaN","dDistanceX","pow","distanceY","dDistanceY","distance","sqrt","default"],"mappings":"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","file":"ParticleSystem.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function randRange (range: number): number {\r\n  range = Math.abs(range);\r\n  return Math.random() * range * 2 - range;\r\n}\r\n\r\nfunction twoDecimal (number: number) {\r\n  return Number(number.toFixed(2));\r\n}\r\n\r\nclass ParticleSystem {\r\n  private texture: CanvasImageSource\r\n  private textureWidth: number\r\n  private textureHeight: number\r\n\r\n  private canvasWidth: number\r\n  private canvasHeight: number\r\n\r\n  private ctx?: CanvasRenderingContext2D\r\n\r\n  // 加速度\r\n  private gravityX: number\r\n  private gravityY: number\r\n\r\n  // 粒子发射时间间隔\r\n  private emissionRate: number\r\n\r\n  // 发射位置\r\n  private emitterX: number\r\n  private emitterY: number\r\n\r\n  // 发射位置浮动值\r\n  private emitterXVariance: number\r\n  private emitterYVariance: number\r\n\r\n  // 粒子发射速度\r\n  private speed: number\r\n\r\n  // 粒子发射角度\r\n  private angle: number\r\n  private angleVariance: number\r\n\r\n  // 旋转角度区间\r\n  private endRotation: number\r\n  private endRotationVariance: number\r\n\r\n  // 开始大小\r\n  private startSize: number\r\n  private startSizeVariance: number\r\n\r\n  // 粒子生命周期\r\n  private lifespan: number\r\n\r\n  // 最大粒子数\r\n  private maxParticles: number\r\n\r\n  // 当前粒子列表\r\n  private particleList: Array<Particle> = []\r\n\r\n  // 对象池粒子\r\n  private pool: Array<Particle> = []\r\n\r\n  // 计时器\r\n  private frameTime: number = 0\r\n\r\n  // 粒子上次重绘的时间\r\n  private lastTime: number\r\n\r\n  private $stopping: boolean = false\r\n  private $stopped: boolean = true\r\n\r\n  // 力量体列表\r\n  private bodyList: Array<Body> = []\r\n\r\n  // 完全停止时的回调\r\n  public onstopped: () => undefined\r\n\r\n  constructor (\r\n    texture: CanvasImageSource,\r\n    textureInfo: {\r\n      width: number,\r\n      height: number\r\n    },\r\n    config: string | any,\r\n    ctx?: CanvasRenderingContext2D,\r\n    canvasInfo?: {\r\n      width: number,\r\n      height: number\r\n    }\r\n  ) {\r\n    if (canvasInfo) {\r\n      this.canvasWidth = canvasInfo.width;\r\n      this.canvasHeight = canvasInfo.height;\r\n    }\r\n    this.ctx = ctx;\r\n\r\n    this.changeTexture(texture, textureInfo);\r\n\r\n    this.changeConfig(config);\r\n\r\n    this.createParticlePool();\r\n  }\r\n\r\n  // 参数初始化\r\n  public changeConfig (config: any) {\r\n    this.gravityX = config.gravity.x;\r\n    this.gravityY = config.gravity.y;\r\n\r\n    this.emitterX = config.emitterX;\r\n    this.emitterXVariance = config.emitterXVariance;\r\n    this.emitterYVariance = config.emitterYVariance;\r\n    this.emitterY = config.emitterY;\r\n\r\n    this.lifespan = config.lifespan;\r\n    this.maxParticles = config.maxParticles;\r\n\r\n    this.speed = config.speed;\r\n\r\n    this.angle = config.angle;\r\n    this.angleVariance = config.angleVariance;\r\n\r\n    this.endRotation = config.endRotation;\r\n    this.endRotationVariance = config.endRotationVariance;\r\n\r\n    this.startSize = config.startSize;\r\n    this.startSizeVariance = config.startSizeVariance;\r\n\r\n    this.emissionRate = this.lifespan / this.maxParticles;\r\n  }\r\n\r\n  // 生成粒子\r\n  private createParticlePool () {\r\n    for (let i = 0; i < this.maxParticles; i++) {\r\n      this.pool.push(new Particle);\r\n    }\r\n  }\r\n\r\n  // 加入一个粒子\r\n  private addOneParticle () {\r\n    let particle: Particle;\r\n\r\n    if (this.pool.length) {\r\n      particle = this.pool.pop();\r\n    } else {\r\n      particle = new Particle;\r\n    }\r\n\r\n    particle.setTextureInfo(this.texture, {\r\n      width: this.textureWidth,\r\n      height: this.textureHeight\r\n    })\r\n\r\n    this.initParticle(particle);\r\n\r\n    this.particleList.push(particle);\r\n  }\r\n\r\n  // 去掉一个粒子\r\n  private removeOneParticle (particle: Particle) {\r\n    let index: number = this.particleList.indexOf(particle);\r\n\r\n    this.particleList.splice(index, 1);\r\n\r\n    particle.texture = null;\r\n\r\n    this.pool.push(particle);\r\n  }\r\n\r\n  private initParticle (particle: Particle): Particle {\r\n    particle.currentTime = 0;\r\n    particle.lifespan = this.lifespan;\r\n\r\n    particle.x = this.emitterX + randRange(this.emitterXVariance);\r\n\r\n    particle.y = this.emitterY + randRange(this.emitterYVariance);\r\n\r\n    particle.endRotation = this.endRotation + randRange(this.endRotationVariance);\r\n\r\n    let angle = this.angle + randRange(this.angleVariance);\r\n\r\n    particle.velocityX = this.speed * Math.cos(angle);\r\n\r\n    particle.velocityY = this.speed * Math.sin(angle);\r\n\r\n    particle.startSize = this.startSize + randRange(this.startSizeVariance);\r\n\r\n    if (particle.startSize < 0) {\r\n      particle.startSize = 0.01\r\n    }\r\n\r\n    particle.scale = particle.startSize / this.startSize;\r\n\r\n    return particle;\r\n  }\r\n\r\n  public updateParticle (particle: Particle, dt: number) {\r\n    dt = dt / 1000;\r\n\r\n    if (this.bodyList.length) {\r\n      this.bodyList.forEach(body => {\r\n        let {\r\n          forceX,\r\n          forceY,\r\n          stop\r\n        } = body.getAcceleration(particle);\r\n\r\n        if (stop) {\r\n          particle.velocityX = 0\r\n          particle.velocityY = 0\r\n        } else {\r\n          particle.velocityX += (this.gravityX * particle.scale + forceX) * dt;\r\n          particle.velocityY += (this.gravityY * particle.scale + forceY)* dt;\r\n        }\r\n      })\r\n    } else {\r\n      particle.velocityX += this.gravityX * particle.scale * dt;\r\n      particle.velocityY += this.gravityY * particle.scale * dt;\r\n    }\r\n\r\n    particle.x += particle.velocityX * dt;\r\n\r\n    particle.y += particle.velocityY * dt;\r\n  }\r\n\r\n  public update (dt: number) {\r\n    // 是否需要新增粒子\r\n    if (!this.$stopping) {\r\n      this.frameTime += dt;\r\n      while (this.frameTime > 0) {\r\n        if (this.particleList.length < this.maxParticles) {\r\n          this.addOneParticle()\r\n        }\r\n\r\n        this.frameTime -= this.emissionRate;\r\n      }\r\n    }\r\n\r\n    // 更新粒子状态或移除粒子\r\n    let temp: Array<Particle> = [...this.particleList];\r\n\r\n    temp.forEach((particle: Particle) => {\r\n      if (particle.currentTime < particle.lifespan) {\r\n        this.updateParticle(particle, dt);\r\n        particle.currentTime += dt;\r\n      } else {\r\n        this.removeOneParticle(particle);\r\n\r\n        if (this.$stopping && this.particleList.length === 0) {\r\n          this.$stopped = true;\r\n          this.onstopped && this.onstopped();\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  public render (dt: number, clear: boolean = false) {\r\n\r\n    this.update(dt);\r\n\r\n    if (typeof (<any>this.ctx).draw !== 'undefined') {\r\n      \r\n      if (clear) {\r\n        this.draw();\r\n        (<any>this.ctx).draw();\r\n      } else {\r\n        this.draw();\r\n        (<any>this.ctx).draw(true);\r\n      }\r\n    } else {\r\n      if (clear) {\r\n        let width: number, height: number;\r\n        if (this.canvasWidth) {\r\n          width = this.canvasWidth;\r\n          height = this.canvasHeight;\r\n        } else if (this.ctx.canvas) {\r\n          width  = this.ctx.canvas.width;\r\n          height = this.ctx.canvas.height;\r\n        }\r\n        this.ctx.clearRect(0, 0, width, height);\r\n        this.draw();\r\n      } else {\r\n        this.draw();\r\n      }\r\n    }\r\n  }\r\n\r\n  private draw () {\r\n    this.particleList.forEach((particle: Particle) => {\r\n      let {\r\n        texture,\r\n        x,\r\n        y,\r\n        width,\r\n        height,\r\n        alpha,\r\n        rotation\r\n      } = particle;\r\n\r\n      // 粒子旋转和透明之后画上画布\r\n      let halfWidth = width / 2,\r\n        halfHeight = height /2;\r\n\r\n      this.ctx.save();\r\n\r\n      this.ctx.translate(x + halfWidth, y + halfHeight);\r\n\r\n      this.ctx.rotate(rotation);\r\n\r\n      if (alpha !== 1) {\r\n        this.ctx.globalAlpha = alpha;\r\n        this.ctx.drawImage(texture, -halfWidth, -halfHeight, width, height);\r\n      } else {\r\n        this.ctx.drawImage(texture, -halfWidth, -halfHeight, width, height);\r\n      }\r\n\r\n      this.ctx.restore();\r\n    })\r\n  }\r\n\r\n  public changeTexture (texture: CanvasImageSource, textureInfo: {\r\n    width: number,\r\n    height: number\r\n  }) {\r\n    this.texture = texture;\r\n\r\n    this.textureWidth = textureInfo.width;\r\n    this.textureHeight = textureInfo.height;\r\n  }\r\n\r\n  // 周期性调用\r\n  private circleDraw (dt: number) {\r\n    if (this.$stopped) {\r\n      return;\r\n    }\r\n\r\n    this.render(dt, true);\r\n\r\n    if (typeof requestAnimationFrame !== 'undefined') {\r\n      requestAnimationFrame(() => {\r\n        let now = Date.now();\r\n        this.circleDraw(now - this.lastTime);\r\n        this.lastTime = now;\r\n      })\r\n    } else {\r\n      setTimeout(() => {\r\n        let now = Date.now();\r\n        this.circleDraw(now - this.lastTime);\r\n        this.lastTime = now;\r\n      }, 17)\r\n    }\r\n  }\r\n\r\n  // 循环更新数据\r\n  private circleData (dt: number, onupdate: ([]: Array<any>) => void) {\r\n    if (this.$stopped) {\r\n      return;\r\n    }\r\n\r\n    this.update(dt);\r\n\r\n    let data = this.particleList.map((particle: Particle) => {\r\n      let {\r\n        texture,\r\n        x,\r\n        y,\r\n        width,\r\n        height,\r\n        alpha,\r\n        rotation\r\n      } = particle;\r\n\r\n      return {\r\n        texture,\r\n        x,\r\n        y,\r\n        width,\r\n        height,\r\n        alpha,\r\n        rotation\r\n      }\r\n    })\r\n\r\n    onupdate(data);\r\n\r\n    if (typeof requestAnimationFrame !== 'undefined') {\r\n      requestAnimationFrame(() => {\r\n        let now = Date.now();\r\n        this.circleData(now - this.lastTime, onupdate);\r\n        this.lastTime = now;\r\n      })\r\n    } else {\r\n      setTimeout(() => {\r\n        let now = Date.now();\r\n        this.circleData(now - this.lastTime, onupdate);\r\n        this.lastTime = now;\r\n      }, 17)\r\n    }\r\n  }\r\n\r\n  public start () {\r\n    this.$stopping = false;\r\n\r\n    if (!this.$stopped) {\r\n      return;\r\n    }\r\n\r\n    this.lastTime = Date.now();\r\n\r\n    this.$stopped = false;\r\n    this.circleDraw(0);\r\n  }\r\n\r\n  public stop () {\r\n    this.$stopping = true;\r\n  }\r\n\r\n  get isStop () {\r\n    return this.$stopped;\r\n  }\r\n\r\n  // 启动仅更新数据模式\r\n  public startOnlyData (onupdate: ([]:Array<any>) => void) {\r\n    this.$stopping = false;\r\n\r\n    if (!this.$stopped) {\r\n      return;\r\n    }\r\n\r\n    this.lastTime = Date.now();\r\n\r\n    this.$stopped = false;\r\n    this.circleData(0, onupdate);\r\n  }\r\n\r\n  // 增加力量体\r\n  public addBody (x: number, y: number, widened: number, scale: number, attract: boolean = false) {\r\n    let body = new Body(x, y, widened, scale, attract);\r\n\r\n    this.bodyList.push(body)\r\n\r\n    return body;\r\n  }\r\n\r\n  public removeBody (body: Body) {\r\n    if (body instanceof Body) {\r\n      let index = this.bodyList.findIndex(item => {\r\n        return item === body;\r\n      })\r\n\r\n      if (index > -1) {\r\n        this.bodyList.splice(index, 1);\r\n      }\r\n    } else {\r\n      throw Error('The first argment is not instanceof Body');\r\n    }\r\n  }\r\n}\r\n\r\nclass Particle {\r\n  public lifespan: number\r\n\r\n  public velocityX: number\r\n  public velocityY: number\r\n\r\n  public x: number\r\n  public y: number\r\n\r\n  public currentTime: number\r\n\r\n  private _startSize: number\r\n  public scale: number\r\n\r\n  public endRotation: number\r\n\r\n  private ratio: number\r\n\r\n  // 输入的图像宽高\r\n  private _width: number\r\n  private _height: number\r\n\r\n  public texture: CanvasImageSource\r\n\r\n  set startSize (size: number) {\r\n    this._startSize = size;\r\n\r\n    this._width = size;\r\n    this._height = size / this.ratio;\r\n  }\r\n\r\n  get startSize (): number {\r\n    return this._startSize;\r\n  }\r\n\r\n  private get progress (): number {\r\n    return this.currentTime / this.lifespan;\r\n  }\r\n\r\n  get alpha (): number {\r\n    let progress = this.progress;\r\n\r\n    if (progress > .8) {\r\n      let alpha: number = (1 - progress) / 0.2;\r\n      return alpha > 0 ? alpha : 0\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  get rotation (): number {\r\n    return this.endRotation * this.progress;\r\n  }\r\n\r\n  public setTextureInfo (texture: CanvasImageSource, config: {\r\n    width: number,\r\n    height: number\r\n  }) {\r\n    this.texture = texture;\r\n    this.ratio = config.width / config.height;\r\n  }\r\n\r\n  public get width (): number {\r\n    return this._width;\r\n  }\r\n\r\n  public get height (): number {\r\n    return this._height;\r\n  }\r\n}\r\n\r\nclass Body {\r\n  private widened: number\r\n\r\n  private innerWidened: number\r\n\r\n  private attract: boolean = true\r\n\r\n  private x: number\r\n\r\n  private y: number\r\n\r\n  private scale: number\r\n\r\n  /**\r\n   * \r\n   * @param x 位置x\r\n   * @param y 位置y\r\n   * @param widened 作用范围\r\n   * @param scale 力量系数\r\n   * @param attract 作用力类型 默认false，吸引力\r\n   */\r\n  constructor (x: number, y: number, widened: number, scale: number, attract: boolean = false) {\r\n    this.setbody(x, y, widened, scale, attract);\r\n  }\r\n\r\n  public setbody (x: number, y: number, widened: number, scale: number, attract: boolean = false) {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.widened = widened;\r\n\r\n    this.innerWidened = widened * 0.1;\r\n    this.scale = scale;\r\n    this.attract = attract;\r\n  }\r\n\r\n  public getAcceleration (particle: Particle) {\r\n    let {\r\n      scale,\r\n      x,\r\n      y\r\n    } = particle;\r\n\r\n    // 将受力模型简化\r\n    let distanceX: number = twoDecimal(this.x - x);\r\n    if (Number.isNaN(distanceX)) {\r\n      debugger\r\n    }\r\n\r\n    let dDistanceX: number = twoDecimal(Math.pow(distanceX, 2));\r\n\r\n    let distanceY: number = twoDecimal(this.y - y);\r\n    let dDistanceY: number = twoDecimal(Math.pow(distanceY, 2));\r\n\r\n    let distance = Math.sqrt(dDistanceX + dDistanceY);\r\n\r\n    if (this.widened < distance) {\r\n      return {\r\n        forceX: 0,\r\n        forceY: 0\r\n      }\r\n    }\r\n\r\n    if (this.attract && this.innerWidened > distance) {\r\n      return {\r\n        stop: true,\r\n        forceX: 0,\r\n        forceY: 0\r\n      }\r\n    }\r\n\r\n    let m: number = twoDecimal((dDistanceX + dDistanceY) * distance);\r\n\r\n    let forceX: number = twoDecimal(5000 * scale * this.scale * distanceX / m);\r\n    let forceY: number = twoDecimal(5000 * scale * this.scale * distanceY / m);\r\n\r\n    // console.log(dDistanceX, dDistanceY, m, forceX, forceY)\r\n\r\n    if (this.attract) {\r\n      return {\r\n        forceX,\r\n        forceY\r\n      }\r\n    }\r\n\r\n    return {\r\n      forceX: -forceX,\r\n      forceY: -forceY\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default ParticleSystem;\r\n\r\nexport {\r\n  ParticleSystem\r\n}\r\n"],"sourceRoot":""}